openapi: 3.0.3

info:
  title: Orders API
  description: API that allows you to manage orders for CoffeeMesh
  version: 1.0.0

servers:
  - url: http://localhost:8000
    description: local development server

paths:
  /orders:
    get:
      summary: Returns a list of orders
      operationId: getOrders
      description: >
        A list of orders made by the customer
        sorted by date. Allows to filter orders
        by range of dates.
      parameters:
      - name: cancelled
        in: query
        required: false
        schema:
          type: boolean
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: A JSON array of orders
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/GetOrderSchema'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

    post:
      summary: Creates an order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderSchema'
      responses:
        '201':
          description: A JSON representation of the created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderSchema'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /orders/{order_id}:
    parameters:
      - in: path
        name: order_id
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Returns the details of a specific order
      operationId: getOrder
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderSchema'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

components:
  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: The payload contains invalid values.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        detail:
          oneOf:
            - type: string
            - type: array
      required:
        - detail
      additionalProperties: false

    OrderItemSchema:
      additionalProperties: false
      type: object
      required:
        - product_id
      properties:
        product_id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
          default: 1
          minimum: 1
          maximum: 1000000

    CreateOrderSchema:
      additionalProperties: false
      type: object
      required:
        - items
      properties:
        items:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemSchema'

    GetOrderSchema:
      additionalProperties: false
      type: object
      required:
        - id
        - created_at
        - status
        - items
      properties:
        id:
          type: string
          format: uuid
        created:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - CREATED
            - PAID
            - PROGRESS
            - CANCELLED
            - DISPATCHED
            - DELIVERED
        order:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemSchema'

security:
  - bearerAuth:
      - getOrders
      - createOrder
      - getOrder
      - updateOrder
      - deleteOrder
      - payOrder
      - cancelOrder

